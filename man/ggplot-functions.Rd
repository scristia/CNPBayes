% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/plot-functions.R
\name{ggChains}
\alias{ggChains}
\alias{ggMixture}
\alias{ggMixture,MultiBatch-method}
\alias{ggMixture,MultiBatchModel-method}
\alias{ggChains,MultiBatch-method}
\title{Trace plots of MCMC chains and mixture model densities}
\usage{
ggChains(model)

ggMixture(model, bins = 100, mixtheme, shift_homozygous)

\S4method{ggMixture}{MultiBatch}(model, bins = 100, mixtheme, shift_homozygous)

\S4method{ggChains}{MultiBatch}(model)
}
\arguments{
\item{model}{A SB, MB, SBP, or MBP model}

\item{bins}{a length-one numeric vector indicating the number of bins -- passed to \code{geom_hist}}

\item{mixtheme}{a ggplot theme}
}
\value{
A \code{gg} object
}
\description{
The \code{ggChains} method provides a convenient wrapper for plotting the chains of all parameters in the various mixture model implementations.  In addition to the estimated number of independent MCMC draws (effective sample size) and Gelman-Rubin convergence diagnostics implemented in \code{gibbs}, visualization of the chains is helpful for assessing convergence.
}
\details{
The \code{ggMixture} method overlays the density of the posterior predictive distribution of the Gaussian mixture on the empirical data. \code{ggMixture} assumes that you have already run the Gibbs sampler either by the \code{gibbs} function or by the \code{posteriorSimulation} function.
}
\examples{
  sb <- SingleBatchModelExample
  iter(sb) <- 1000
  burnin(sb) <- 100
  sb <- posteriorSimulation(sb)
  fig.chains <- ggChains(sb)
  ## component-specific chains
  fig.chains[["comp"]]
  ## single-parameter chains and log-likelihood
  fig.chains[["single"]]

  ## plot the mixture
  fig.mix <- ggMixture(sb)
}
\seealso{
\code{\link{gibbs}}
}
